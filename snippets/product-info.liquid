{%- comment -%} Product Information Snippet {%- endcomment -%}
<div class="main-product">
  <div class="main-product__container">
    <div class="main-product__gallery">
      <div class="main-product__thumbnails">
        {%- for media in product.media -%}
          <img 
            src="{{ media | image_url: width: 80, height: 80 }}"
            alt="{{ media.alt | escape }}"
            class="main-product__thumbnail{% if media.id == product.featured_media.id %} main-product__thumbnail--active{% endif %}"
            loading="lazy"
            width="80"
            height="80"
            data-media-id="{{ media.id }}"
          >
        {%- endfor -%}
      </div>
      <div class="main-product__main-image">
        {%- if product.featured_media -%}
          <img
            src="{{ product.featured_media | image_url: width: 800 }}"
            alt="{{ product.featured_media.alt | escape }}"
            id="ProductMainImage"
            class="main-product__image"
            width="{{ product.featured_media.width }}"
            height="{{ product.featured_media.height }}"
            loading="eager"
          >
        {%- endif -%}
      </div>
    </div>

    <div class="main-product__info">
      <h1 class="main-product__title">{{ product.title }}</h1>
      
      <div class="main-product__rating">
        <span class="main-product__stars">★★★★★</span>
        <span class="main-product__score">4.9</span>
        <span>({{ product.metafields.reviews.rating_count | default: 128 }} reviews)</span>
      </div>

      <p class="main-product__desc">{{ product.description }}</p>

      <form method="post" action="/cart/add" id="product_form_{{ product.id }}" accept-charset="UTF-8" class="main-product__form" enctype="multipart/form-data">
        <input type="hidden" name="form_type" value="product">
        <input type="hidden" name="utf8" value="✓">
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" class="main-product__variant-id">

        <div class="main-product__price-row">
          <span class="main-product__price" data-regular-price>
            {{ product.selected_or_first_available_variant.price | money }}
          </span>
          {%- if product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price -%}
            <span class="main-product__compare" data-compare-price>
              {{ product.selected_or_first_available_variant.compare_at_price | money }}
            </span>
            <span class="main-product__badge">
              Save {{ product.selected_or_first_available_variant.compare_at_price | minus: product.selected_or_first_available_variant.price | money }}
            </span>
          {%- endif -%}
        </div>

        {%- unless product.has_only_default_variant -%}
          {%- for option in product.options_with_values -%}
            <div class="main-product__option" data-option-index="{{ forloop.index0 }}">
              <label class="main-product__option-label">
                {{ option.name }}: <span class="main-product__option-value">{{ option.selected_value }}</span>
              </label>
              
              {%- if option.name == 'Color' -%}
                <div class="main-product__swatches">
                  {%- for value in option.values -%}
                    <button 
                      type="button"
                      class="main-product__swatch{% if value == option.selected_value %} main-product__swatch--active{% endif %}"
                      style="background-color: {{ value | downcase }}"
                      data-value="{{ value | escape }}"
                      data-option-select
                    ></button>
                  {%- endfor -%}
                </div>
              {%- else -%}
                <select 
                  class="main-product__select"
                  name="options[{{ option.name | escape }}]"
                  data-option-select
                >
                  {%- for value in option.values -%}
                    <option 
                      value="{{ value | escape }}"
                      {% if value == option.selected_value %}selected="selected"{% endif %}
                    >
                      {{ value }}
                    </option>
                  {%- endfor -%}
                </select>
              {%- endif -%}
            </div>
          {%- endfor -%}
        {%- endunless -%}

        <div class="main-product__quantity">
          <label for="Quantity-{{ section.id }}" class="main-product__quantity-label">Quantity</label>
          <input
            type="number"
            name="quantity"
            id="Quantity-{{ section.id }}"
            value="1"
            min="1"
            class="main-product__quantity-input"
          >
        </div>

        <button 
          type="submit"
          name="add"
          class="main-product__submit"
          {% unless product.available %}disabled{% endunless %}
        >
          <span class="main-product__submit-text">
            {%- if product.available -%}
              Add to Cart
            {%- else -%}
              Sold Out
            {%- endif -%}
          </span>
        </button>

        <div class="main-product__shipping">
          <label class="main-product__shipping-label">Shipping</label>
          <div class="main-product__shipping-info">
            Free shipping on orders over {{ settings.free_shipping_threshold | money }}
          </div>
        </div>

        {%- if product.requires_selling_plan -%}
          <div class="main-product__membership">
            <label class="main-product__membership-label">Membership Plan</label>
            <select name="selling_plan" class="main-product__membership-select">
              <option value="">One-time purchase</option>
              {%- for selling_plan_group in product.selling_plan_groups -%}
                {%- for selling_plan in selling_plan_group.selling_plans -%}
                  <option value="{{ selling_plan.id }}">
                    {{ selling_plan.name }} - {{ selling_plan.price_adjustments.first.value | money }} / {{ selling_plan.options.first.value }}
                  </option>
                {%- endfor -%}
              {%- endfor -%}
            </select>
          </div>
        {%- endif -%}
      </form>
    </div>
  </div>
</div>

<style>
.main-product {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  padding: 2rem 0;
}

.main-product__gallery {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 1rem;
}

.main-product__thumbnails {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.main-product__thumbnail {
  width: 80px;
  height: 80px;
  object-fit: cover;
  border-radius: 8px;
  cursor: pointer;
  border: 2px solid transparent;
}

.main-product__thumbnail:hover {
  border-color: #00c2b3;
}

.main-product__main-image img {
  width: 100%;
  height: auto;
  border-radius: 12px;
}

.main-product__title {
  font-size: 2rem;
  color: #183642;
  margin: 0 0 1rem;
}

.main-product__rating {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.main-product__stars {
  color: #00c2b3;
}

.main-product__score {
  color: #666;
}

.main-product__price-row {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.main-product__price {
  font-size: 1.5rem;
  font-weight: 600;
  color: #183642;
}

.main-product__compare {
  text-decoration: line-through;
  color: #666;
}

.main-product__badge {
  background: #00c2b3;
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.875rem;
}

.main-product__description {
  color: #183642;
  margin-bottom: 1.5rem;
}

.main-product__option {
  margin-bottom: 1.5rem;
}

.main-product__option-label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: #183642;
}

.main-product__option-buttons {
  display: flex;
  gap: 0.5rem;
}

.main-product__option-button {
  padding: 0.5rem 1rem;
  border: 2px solid #ddd;
  border-radius: 6px;
  background: white;
  cursor: pointer;
  transition: all 0.2s;
}

.main-product__option-button:hover {
  border-color: #00c2b3;
}

.main-product__option-button--selected {
  border-color: #00c2b3;
  background: #00c2b3;
  color: white;
}

.main-product__quantity {
  margin-bottom: 1.5rem;
}

.main-product__quantity label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: #183642;
}

.main-product__quantity-input {
  width: 100px;
  padding: 0.5rem;
  border: 2px solid #ddd;
  border-radius: 6px;
}

.main-product__add-button {
  width: 100%;
  padding: 1rem;
  background: #00c2b3;
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 1.1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background 0.2s;
}

.main-product__add-button:hover {
  background: #00a89b;
}

.main-product__add-button:disabled {
  background: #ddd;
  cursor: not-allowed;
}

.main-product__shipping {
  margin-top: 2rem;
  padding-top: 2rem;
  border-top: 1px solid #ddd;
}

.main-product__shipping h3 {
  color: #183642;
  margin: 0 0 0.5rem;
}

.main-product__shipping p {
  color: #666;
  margin: 0 0 0.5rem;
}

@media screen and (max-width: 768px) {
  .main-product {
    grid-template-columns: 1fr;
  }
  
  .main-product__gallery {
    margin-bottom: 2rem;
  }
}
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('product_form_{{ product.id }}');
    const variantIdInput = form.querySelector('.main-product__variant-id');
    const optionSelectors = form.querySelectorAll('[data-option-select]');
    const mainImage = document.getElementById('ProductMainImage');
    const thumbnails = document.querySelectorAll('.main-product__thumbnail');
    const regularPrice = document.querySelector('[data-regular-price]');
    const comparePrice = document.querySelector('[data-compare-price]');
    
    // Product variants as JSON for easy access
    const productVariants = {{ product.variants | json }};
    
    // Update variant ID when options change
    function updateVariantSelection() {
      const selectedOptions = Array.from(optionSelectors).map(selector => {
        return selector.tagName === 'SELECT' ? selector.value : selector.dataset.value;
      });
      
      const selectedVariant = productVariants.find(variant => {
        return variant.options.every((option, index) => option === selectedOptions[index]);
      });
      
      if (selectedVariant) {
        variantIdInput.value = selectedVariant.id;
        regularPrice.textContent = selectedVariant.price;
        if (comparePrice) {
          comparePrice.textContent = selectedVariant.compare_at_price;
        }
        
        // Update main image if variant has image
        if (selectedVariant.featured_image) {
          mainImage.src = selectedVariant.featured_image.src;
          mainImage.alt = selectedVariant.featured_image.alt;
          
          // Update active thumbnail
          thumbnails.forEach(thumb => {
            thumb.classList.toggle('main-product__thumbnail--active', 
              thumb.dataset.mediaId === selectedVariant.featured_media.id);
          });
        }
      }
    }
    
    // Add change event listeners to all option selectors
    optionSelectors.forEach(selector => {
      if (selector.tagName === 'SELECT') {
        selector.addEventListener('change', updateVariantSelection);
      } else {
        selector.addEventListener('click', function() {
          const parent = this.closest('.main-product__swatches');
          parent.querySelector('.main-product__swatch--active')?.classList.remove('main-product__swatch--active');
          this.classList.add('main-product__swatch--active');
          updateVariantSelection();
        });
      }
    });
    
    // Thumbnail click handling
    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', function() {
        const mediaId = this.dataset.mediaId;
        const mediaItem = {{ product.media | json }}.find(media => media.id === mediaId);
        
        if (mediaItem) {
          mainImage.src = mediaItem.src;
          mainImage.alt = mediaItem.alt;
          
          thumbnails.forEach(thumb => {
            thumb.classList.toggle('main-product__thumbnail--active', thumb === this);
          });
        }
      });
    });
  });
</script> 